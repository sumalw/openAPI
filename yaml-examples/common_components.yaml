openapi: 3.0.3
info:
  title: EazyShop Products APIs Definition
  description: |
    # About Us
    ## Another About Us
    **EazyShop** Using this *OpenAPI* specification, 
    any ***consumer*** can understand the `API` that are exposed by EazyShop.

    # Categories Supported
      - Mobiles
      - Laptop
      - Tab
        - new Tab
        - Old tabs
    ```

  termsOfService: http://eazyshop.com/terms
  contact: 
    name: API Support
    url: https://www.eazyshops.com/support
    email: support@eazyshop.com
  license:
    name: EazyShop License
    url: https://www.eazyshop.com/license/LICENSE-2.0
  version: 0.0.1
servers:
- url: https://development.eazyshop.server.com/v1
  description: Development server
tags:
  - name: Categories
    description: Categories relaetd operations
  - name: Products
    description: products relaetd operations
  - name: Orders
    description: Orders relaetd operations
paths:
  /categories:
    get:
      tags: 
        - Categories
      summary: List details of the item
      description: Returns the details of the item supported by EazyShop
      responses:
        '200':
          description: Details of the product
          content: 
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  properties: 
                    categoryId:
                      type: integer
                    name:
                      type: string
  /categories/{categoryId}:
    get:
      tags: 
        - Categories      
      summary: List all categories
      description: Returns the list of categories supported by EazyShop
      parameters: 
        - name: categoryId
          in: path
          required: true
          schema: 
            type: integer
            minimum: 100
            maximum: 1000
          example: 102
      responses:
        '200':
          description: A list of categories
          content: 
            application/json:
              schema:
                type: object
                properties: 
                  categoryId:
                    type: integer
                  name:
                    type: string
  /products:
    get: 
      tags: 
        - Products
      summary: List all the products
      description: | 
        Returns the list of propducts supported 
          by EazyShop
      parameters: 
        - name: productId
          in: query
          schema: 
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses: 
        '200':
          description: A list of products
          content: 
            application/json:
              schema: 
                type: array
                items: 
                  type: object
                  properties: 
                    productId:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                    categoryName:
                      type: string
                    quantity:
                      type: integer
                      description: |
                        ***Quantity*** represents the `stock` value when this field is
                        being sent by the EazyShop. It represents `number of product items`
                        inside the order. <u>*when teh stock value is 0*</u>
          
  /products/{productId}:
    get: 
      tags: 
        - Products
      summary: return product details
      description: | 
        Returns the product details 
          from EazyShop
      parameters: 
        - name: productId
          in: path
          required: true
          schema: 
            type: integer
            minimum: 100
            maximum: 1000
          example: 101
      responses: 
        '200':
          description: Return product details
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  productId:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  categoryName:
                    type: string
                  quantity:
                    type: integer
  /orders:
    post: 
      tags: 
        - Orders
      summary: Create order
      description: |
        Popst order details to EazyShop for processing 
        and shipping
      requestBody: 
        content: 
          application/json:
            schema: 
              type: object
              properties: 
                products: 
                  type: array
                  items: 
                    type: object
                    properties: 
                      productId:
                        type: integer
                      name:
                        type: string
                      price: 
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                address:
                  $ref: '#/components/schemas/Address'
      responses: 
        '201':
          description: Order created successfully!
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  orderId:
                    type: integer
    put: 
      tags: 
        - Orders      
      summary: Update order
      description: |
        Update order details to EazyShop for processing 
        and shipping
      requestBody: 
        content: 
          application/json:
            schema: 
              type: object
              properties: 
                orderId:
                  type: integer
                products: 
                  type: array
                  items: 
                    type: object
                    properties: 
                      productId:
                        type: integer
                      name:
                        type: string
                      price: 
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                address:
                  $ref: '#/components/schemas/Address'
      responses: 
        '200':
          description: Order details updated successfully!
    delete: 
      tags: 
        - Orders      
      summary: Delete order
      description: Delete order details from EazyShop
      parameters: 
        $ref: "#/components/parameters/orderIdQueryParam"
      responses: 
        '204':
          description: Order has been canceled successfully!
    get: 
      tags: 
        - Orders      
      summary: Get Oder details
      description: Get order details from EazyShop
      parameters: 
        $ref: "#/components/parameters/orderIdQueryParam"
      responses: 
        '200':
          description: Fetch order  details
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  orderId:
                    type: integer
                  products: 
                    type: array
                    items: 
                      type: object
                      properties: 
                        productId:
                          type: integer
                        name:
                          type: string
                        price: 
                          type: number
                        categoryName:
                          type: string
                        quantity:
                          type: integer
                  address:
                    $ref: '#/components/schemas/Address'

                  
components: 
  parameters: 
    orderIdQueryParam:
        name: orderId
        in: query
        required: true
        schema: 
          type: integer          
  schemas: 
    Address:
      type: object
      properties: 
        addressLine:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        required: [addressLine, city, state, zipcode]
         

